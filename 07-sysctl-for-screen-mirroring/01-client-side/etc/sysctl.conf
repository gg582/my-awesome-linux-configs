## Enlarge the transfer window
net.ipv4.tcp_window_scaling=1
### 1-2Mib
net.core.rmem_max=1048576
net.core.wmem_max=2097152
net.core.rmem_default=1048576
net.core.wmem_default=2097152
## More aggressive TCP RMEM and WMEM (max buffer sizes)
net.ipv4.tcp_rmem=4096 131072 1048576
net.ipv4.tcp_wmem=4096 131072 2097152

## Follow RFC1323
net.ipv4.tcp_timestamps=1

## Input packet buffer (reasonable size, ram is 64G)
net.core.netdev_max_backlog=32768

## Memory management tuning for 6GB
vm.swappiness=0
## Prevent write burst
vm.dirty_ratio=8
vm.dirty_background_ratio=4
## Save energy by setting longer dirty memory expiration periods
vm.dirty_expire_centisecs=4000

## TCP connection timeout tuning
net.ipv4.tcp_fin_timeout=240
net.ipv4.tcp_keepalive_time=16384

## Maximum connections backlog(considered insufficient RAM)
net.core.somaxconn=256

## TCP TIME_WAIT reuse (keep reuse, remove recycle)
net.ipv4.tcp_max_tw_buckets=100000
# net.ipv4.tcp_tw_recycle=1  # deprecated, removed
net.ipv4.tcp_tw_reuse=1
## Enlarge ICMP Rate Limit
net.ipv4.icmp_ratelimit=32768
## Save energy via slow starts
net.ipv4.tcp_slow_start_after_idle=1
## Do not save TCP metrics. Client connects to many APs. This is an edge case to disable RTT saving

## Forcefully probe MTU to prevent mismatch
net.ipv4.tcp_mtu_probing=1
net.ipv4.tcp_congestion_control=bbr
## Enable low latency
net.ipv4.tcp_low_latency=1
